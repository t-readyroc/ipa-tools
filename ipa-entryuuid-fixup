#!/bin/bash

#
# Copyright (C) 2022 Edward Valley <ed.valley@yandex.com>
#

set -u

declare TMP_PASS=

at_exit()
{
    [ -z "${TMP_PASS}" ] \
        || rm -f "${TMP_PASS}"
}

usage()
{
    local BN=
    BN="$(basename "${0}")"

    echo "Usage: ${BN} <base> <filter>"
}

ldif_wrap()
{
    local LF=$'\n'

    local DATA=
    DATA="${1:0:1}$(fold -w 77 <<< "${1:1:${#1}}" 2> /dev/null)" \
        || return 1

    echo "${DATA//${LF}/${LF} }"
    return 0
}

main()
{
    { (( $# == 2 )) && [ -n "${1}" ] && [ -n "${2}" ]; } || {
        usage
        return 1
    }
    local LDAP_BASE=
    LDAP_BASE="${1}"
    local LDAP_FILTER=
    LDAP_FILTER="(&(${2})(!(entryUUID=*)))"

    echo "I: Initializing..."

    trap 'at_exit' EXIT

    local DM_PASS=
    echo -n "I: Enter 'Directory Manager' password: "
    read -r -s DM_PASS
    echo

    [ -n "${DM_PASS}" ] || {
        echo "E: Aborting: No password provided"
        return 1
    }

    { TMP_PASS="$(mktemp 2> /dev/null)" && chmod 600 "${TMP_PASS}" && \
    echo -n "${DM_PASS}" 2> /dev/null > "${TMP_PASS}"; } || {
        echo "E: Failed to write to temporary file"
        return 1
    }

    echo "I: Reading instance configuration..."
    local SCHEMA_DIR=
    { SCHEMA_DIR="$(ldapsearch \
        -LLL -o "ldif-wrap=no" -h "localhost" -x \
        -D "cn=Directory Manager" -y "${TMP_PASS}" \
        -b "cn=config" "(objectClass=nsslapdConfig)" "nsslapd-schemadir" | \
        sed -n -r 's/^nsslapd-schemadir: (.*)$/\1/p')" && [ -d "${SCHEMA_DIR}" ]; } || {
            echo "E: Failed"
            return 1
    }
    local SCHEMA_FILE="${SCHEMA_DIR}/99user.ldif"

    echo "I: Reading dirsrv instance name..."
    local IPA_REALM=
    { IPA_REALM="$(sed -n -r 's/^realm[ ]+=[ ]+(.*)$/\1/p' < "/etc/ipa/default.conf")" && \
    [ -n "${IPA_REALM}" ]; } || {
        echo "E: Failed"
        return 1
    }
    local DS_INAME="${IPA_REALM//./-}"

    echo "I: Searching for incomplete entries..."
    local -a LDAP_ENTRY_A=()
    IFS=$'\n' read -r -d '' -a LDAP_ENTRY_A <<< "$(ldapsearch \
        -LLL -o "ldif-wrap=no" -h "localhost" -x \
        -D "cn=Directory Manager" -y "${TMP_PASS}" \
        -b "${LDAP_BASE}" "${LDAP_FILTER}" "dn" | sed -n -r 's/^dn: (.*)$/\1/p' | sort)"

    (( ${#LDAP_ENTRY_A[@]} > 0 )) || {
        echo "I: No incomplete entries found"
        return 0
    }

    echo "I: Backing up dirsrv instance schema..."
    local SCHEMA_BKP=
    { SCHEMA_BKP="${SCHEMA_FILE}.bak.$(date +%s)" && \
    cp -p "${SCHEMA_FILE}" "${SCHEMA_BKP}" 2> /dev/null; } || {
        echo "E: Failed"
        return 1
    }

    # Maybe 'sed' can do this better
    echo "I: Patching dirsrv instance schema..."
    echo -n > "${SCHEMA_FILE}" 2> /dev/null || {
        echo "E: Failed"
        return 1
    }
    local ATTR_DATA=
    local LDIF_LINE=
    local -i JOB_PHASE=0
    while IFS=$'\n' read -r LDIF_LINE; do
        if (( JOB_PHASE == 0 )); then
            if [[ "${LDIF_LINE}" =~ ^attribute[Tt]ypes:\ \(\ 1\.3\.6\.1\.1\.16\.4\  ]]; then
                ATTR_DATA="${LDIF_LINE}"
                (( JOB_PHASE++ ))
                continue
            fi
        elif (( JOB_PHASE == 1 )); then
            if [[ "${LDIF_LINE}" =~ ^\ (.*)$ ]]; then
                ATTR_DATA+="${BASH_REMATCH[1]}"
                continue
            else
                ATTR_DATA="${ATTR_DATA//NO-USER-MODIFICATION/}"
                ATTR_DATA="${ATTR_DATA//  / }"
                ATTR_DATA="$(ldif_wrap "${ATTR_DATA}")" || {
                    echo "E: Failed"
                    return 1
                }
                echo "${ATTR_DATA}" >> "${SCHEMA_FILE}"
                (( JOB_PHASE++ ))
            fi
        fi
        echo "${LDIF_LINE}" >> "${SCHEMA_FILE}"
    done < "${SCHEMA_BKP}"

    echo "I: Restarting dirsrv instance service..."
    systemctl restart "dirsrv@${DS_INAME}.service" &> /dev/null || {
        echo "E: Failed"
        return 1
    }

    echo "I: Processing incomplete entries..."
    local LDAP_ENTRY=
    for LDAP_ENTRY in "${LDAP_ENTRY_A[@]}"; do
        echo "I: Processing entry: ${LDAP_ENTRY}"
        local ENTRY_UUID=
        ENTRY_UUID="$(uuidgen --random 2> /dev/null)" || {
            echo "E: Failed to generate entryUUID"
            return 1
        }
        local LDIF_DATA=
        printf -v LDIF_DATA \
            'dn: %s\nchangeType: modify\nadd: entryUUID\nentryUUID: %s\n\n' \
            "${LDAP_ENTRY}" "${ENTRY_UUID}"
        local TOUTP=
        TOUTP="$(ldapmodify -h "localhost" \
            -D "cn=Directory Manager" -y "${TMP_PASS}" <<< "${LDIF_DATA}"$'\n' 2>&1)" || {
                echo "${TOUTP}"
                echo "E: Failed"
                return 1
        }
    done

    echo "I: Restoring dirsrv instance schema..."
    cat "${SCHEMA_BKP}" 2> /dev/null > "${SCHEMA_FILE}" || {
        echo "E: Failed"
        return 1
    }

    echo "I: Restarting dirsrv instance service..."
    systemctl restart "dirsrv@${DS_INAME}" &> /dev/null || {
        echo "E: Failed"
        return 1
    }

    echo "I: Done!"
    return 0
}

main "${@}"

exit $?
